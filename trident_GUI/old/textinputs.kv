DataShowcase:
    name:'TextInputs'
    focused: vertical_tolerance
    on_parent:
        if not args[1] and self.focused: self.focused.focus = False
        if args[1]: vertical_tolerance.focus = True


    GridLayout:
        size: self.size
        cols: 2
        row_default_height: '25dp'
        spacing: "15dp"
        padding: "15dp"
        orientation: 'vertical'

        Label:
            text: 'Left Receiver'
        Button:
            id: 'leftReceiver'
            text: '-'
            size: (100,200)
            on_release:
                app.dropdown('L')
                app.dropdown('leftReceiver')

        Label:
            text: 'Center Receiver'
        Button:
            id: 'centerReceiver'
            text: '-'
            size_hint_y: .12,.12
            on_release:
                app.dropdown('C')
                centerReceiver.text = 'C'
                app.dropdown('centerReceiver')

        Label:
            text: 'Right Receiver'
        Button:
            id: 'rightReceiver'
            text: '-'
            size_hint_y: .12,.12
            on_release:
                app.dropdown('R')
                app.dropdown('rightReceiver')

        Label:
            text: 'Vertical Tolerance: (m)'
        CTextInput
            id: vertical_tolerance
            size_hint_y: None
            height: '32dp'
            multiline: False
            text: str(root.vertical_tolerance)

        Label:
            text: 'Horizontal Tolerance: (m)'
        CTextInput:
            id: horizontal_tolerance
            size_hint_y: None
            height: '32dp'
            multiline: False
            text: str(root.horizontal_tolerance)

        Label:
            text: 'GPS Spacing: (m)'
        CTextInput:
            id: gps_spacing
            size_hint_y: None
            height: '32dp'
            multiline: False
            text: str(root.gps_spacing)

        Label:
            text: 'Quality GPS Coordinates'
        CTextInput:
            id: notifier
            size_hint_y: None
            height: '32dp'
            multiline: False
            readonly: True
        Label:
            text: 'Decimal Lat, Long, and Zone'
        BoxLayout:
            minimum_height: '55dp'
            position: 'center_x'
            orientation: 'horizontal'
            size_hint_y: 0.6
            CTextInput:
                id: lat_box
                size_hint_y:None
                height: '32dp'
                width: '32dp'
                multiline: False
                text:'Lat'
            CTextInput:
                id: long_box
                size_hint_y: None
                height: '32dp'
                multiline: False
                text: 'Long'
            CTextInput:
                id: zone_box
                size_hint_y: None
                height: '32dp'
                multiline: False
                text: 'Zone'
        Label:
            text: 'DMS -> Decimal Conversion'
        BoxLayout:
            minimum_height: '55dp'
            position: 'center_x'
            orientation: 'horizontal'
            size_hint_y: 0.6

            CTextInput:
                id: in_put
                size_hint_y:None
                height: '32dp'
                multiline: False
                text: 'Input DMS'

            CTextInput:
                id: out_put
                size_hint_y: None
                height: '32dp'
                multiline: False
                readonly: True
        Label:
            text: 'Oregon State Plane System Coordinates'
        CTextInput:
            id: oregon_box
            size_hint_y: None
            height: '44dp'
            center_y: True
            multiline: False
            readonly: True
        Button:
            text: 'Submit'
            size_hint_x: None
            width: '100dp'
            on_release:
                app.submit(horizontal_tolerance.text,vertical_tolerance.text,gps_spacing.text)

        Button:
            text: 'Reset'
            size_hint_x: None
            width: '100dp'
            on_release:
                vertical_tolerance.text = str(0.1)
                horizontal_tolerance.text = str(0.05)
                gps_spacing.text = str(0.5)
                oregon_box.text = ''
                in_put.text = ''
                out_put.text = ''
                lat_box = ''
                lon_box = ''
                zone_box = ''
                app.submit(float(0.05),float(0.1),float(0.5))
        Button:
            text: 'DMS -> Degree Decimal'
            size_hint_x: None
            width: '100dp'
            on_release:
                DMS = in_put.text
                result = app.dms_degree_conversion(DMS)
                out_put.text = result
        Button:
            text: 'Translate to Oregon Plane'
            size_hint_x: None
            width: '100dp'
            on_release:
                long = long_box.text
                lat =  lat_box.text
                zone = zone_box.text
                if(long.isdigit() and lat.isdigit() and zone.isdigit()):\
                result = app.lat_long_to_Oregon_Grid(float(lat), float(long), int (zone))
                oregon_box.text = result
        Button:
            text: 'Quality of 4 checker'
            size_hint_x: None
            width: '100dp'
            on_release:
                result = app.quality_reader()
                notifier.text = result
<CTextInput@TextInput>
    on_focus:
        screen = self.parent.parent.parent.parent
        if screen.parent: screen.focused = self
